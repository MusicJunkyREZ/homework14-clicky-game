{"ast":null,"code":"var _jsxFileName = \"/Users/ReidZuckerman/Desktop/codingclass/homework14/homework14-clicky-game/clickygame/src/App.js\";\nimport React, { Component } from \"react\"; // import Card from \"./components/Card\";\n// import Wrapper from \"./components/Wrapper\";\n// import Title from \"./components/Title\";\n\nimport cards from \"./cards.json\"; // import './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      ;\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over: (\\nscore: \".concat(this.state.score, \")\"));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      if (!this.state.clicked.includes(id)) {\n        this.increase();\n        this.state.cards.sort(() => Math.random - 0.5);\n        return true;\n      } else {\n        this.gameOver();\n      }\n    };\n\n    this.increase = () => {\n      let newScore = this.state.score + 1;\n      this.setState({\n        score: newScore\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ReidZuckerman/Desktop/codingclass/homework14/homework14-clicky-game/clickygame/src/App.js"],"names":["React","Component","cards","App","state","score","highscore","gameOver","setState","console","log","forEach","card","count","alert","clickCount","id","clicked","includes","increase","sort","Math","random","newScore","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACNF,MAAAA,KADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADiB;;AAAA,SAQzBC,QARyB,GAQd,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAAvB,SAAd,EAA6C,YAAU;AACrDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AAAA;AACD,WAAKF,KAAL,CAAWF,KAAX,CAAiBS,OAAjB,CAAyBC,IAAI,IAAI;AAC/BA,QAAAA,IAAI,CAACC,KAAL,GAAa,CAAb;AACD,OAFD;AAGAC,MAAAA,KAAK,gCAAyB,KAAKV,KAAL,CAAWC,KAApC,OAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KApBwB;;AAAA,SAsBzBU,UAtByB,GAsBXC,EAAD,IAAQ;AACnB,UAAG,CAAC,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,QAAnB,CAA4BF,EAA5B,CAAJ,EAAoC;AAClC,aAAKG,QAAL;AACA,aAAKf,KAAL,CAAWF,KAAX,CAAiBkB,IAAjB,CAAsB,MAAMC,IAAI,CAACC,MAAL,GAAc,GAA1C;AACA,eAAO,IAAP;AACD,OAJD,MAIO;AACL,aAAKf,QAAL;AACD;AACF,KA9BwB;;AAAA,SAgCzBY,QAhCyB,GAgCd,MAAM;AACf,UAAII,QAAQ,GAAG,KAAKnB,KAAL,CAAWC,KAAX,GAAmB,CAAlC;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEkB;AADK,OAAd;AAGD,KArCwB;AAAA;;AAuCzBC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AA7CwB;;AAgD3B,eAAerB,GAAf","sourcesContent":["import React, {Component} from \"react\";\n// import Card from \"./components/Card\";\n// import Wrapper from \"./components/Wrapper\";\n// import Title from \"./components/Title\";\nimport cards from \"./cards.json\"\n// import './App.css';\n\nclass App extends Component{\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  }\n\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function(){\n        console.log(this.state.highscore)\n      });\n    };\n    this.state.cards.forEach(card => {\n      card.count = 0\n    });\n    alert(`Game Over: (\\nscore: ${this.state.score})`)\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = (id) => {\n    if(!this.state.clicked.includes(id)){\n      this.increase()\n      this.state.cards.sort(() => Math.random - 0.5)\n      return true\n    } else {\n      this.gameOver();\n    }\n  }\n\n  increase = () => {\n    let newScore = this.state.score + 1\n    this.setState({\n      score: newScore\n    })\n  }\n\n  render(){\n    return(\n      <Wrapper>\n\n      </Wrapper>\n    )\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}