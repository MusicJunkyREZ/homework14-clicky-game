{"ast":null,"code":"var _jsxFileName = \"/Users/ReidZuckerman/Desktop/codingclass/homework14/homework14-clicky-game/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport cards from \"./cards.json\"; // import './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      ;\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over: (\\nscore: \".concat(this.state.score, \")\"));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      this.state.cards.find((card, i) => {\n        if (card.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n  }\n\n  // increase = () => {\n  //   let newScore = this.state.score + 1\n  //   this.setState({\n  //     score: newScore\n  //   })\n  // }\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Clicky Game\"), this.state.cards.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ReidZuckerman/Desktop/codingclass/homework14/homework14-clicky-game/clickygame/src/App.js"],"names":["React","Component","Card","Wrapper","Header","cards","App","state","score","highscore","gameOver","setState","console","log","forEach","card","count","alert","clickCount","id","find","i","sort","Math","random","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACjB;AACNF,MAAAA,KADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADiB;;AAAA,SAQzBC,QARyB,GAQd,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAAvB,SAAd,EAA6C,YAAU;AACrDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AAAA;AACD,WAAKF,KAAL,CAAWF,KAAX,CAAiBS,OAAjB,CAAyBC,IAAI,IAAI;AAC/BA,QAAAA,IAAI,CAACC,KAAL,GAAa,CAAb;AACD,OAFD;AAGAC,MAAAA,KAAK,gCAAyB,KAAKV,KAAL,CAAWC,KAApC,OAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KApBwB;;AAAA,SAgCzBU,UAhCyB,GAgCZC,EAAE,IAAI;AACjB,WAAKZ,KAAL,CAAWF,KAAX,CAAiBe,IAAjB,CAAsB,CAACL,IAAD,EAAOM,CAAP,KAAa;AACjC,YAAIN,IAAI,CAACI,EAAL,KAAYA,EAAhB,EAAoB;AAClB,cAAGd,KAAK,CAACgB,CAAD,CAAL,CAASL,KAAT,KAAmB,CAAtB,EAAwB;AACtBX,YAAAA,KAAK,CAACgB,CAAD,CAAL,CAASL,KAAT,GAAiBX,KAAK,CAACgB,CAAD,CAAL,CAASL,KAAT,GAAiB,CAAlC;AACA,iBAAKL,QAAL,CAAc;AAACH,cAAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAU;AACtDI,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,aAFD;AAGA,iBAAKD,KAAL,CAAWF,KAAX,CAAiBiB,IAAjB,CAAsB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA5C;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,iBAAKd,QAAL;AACD;AACF;AACF,OAbD;AAcD,KA/CwB;AAAA;;AAiDzB;AACA;AACA;AACA;AACA;AACA;AAEAe,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKF,KAAL,CAAWF,KAAX,CAAiBqB,GAAjB,CAAqBX,IAAI,IACxB,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKG,UADnB;AAEE,MAAA,EAAE,EAAEH,IAAI,CAACI,EAFX;AAGE,MAAA,GAAG,EAAEJ,IAAI,CAACI,EAHZ;AAIE,MAAA,KAAK,EAAEJ,IAAI,CAACY,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAaD;;AAtEwB;;AAyE3B,eAAerB,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport cards from \"./cards.json\"\n// import './App.css';\n\nclass App extends Component{\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  }\n\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function(){\n        console.log(this.state.highscore)\n      });\n    };\n    this.state.cards.forEach(card => {\n      card.count = 0\n    });\n    alert(`Game Over: (\\nscore: ${this.state.score})`)\n    this.setState({score: 0});\n    return true;\n  }\n\n  // clickCount = (id) => {\n  //   if(!this.state.clicked.includes(id)){\n  //     this.increase()\n  //     this.state.cards.sort(() => Math.random - 0.5)\n  //     return true\n  //   } else {\n  //     this.gameOver();\n  //   }\n  // }\n\n  clickCount = id => {\n    this.state.cards.find((card, i) => {\n      if (card.id === id) {\n        if(cards[i].count === 0){\n          cards[i].count = cards[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  // increase = () => {\n  //   let newScore = this.state.score + 1\n  //   this.setState({\n  //     score: newScore\n  //   })\n  // }\n\n  render(){\n    return(\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}